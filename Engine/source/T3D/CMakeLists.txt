set(TORQUE_T3D_SRCS
	aiClient.cpp
	aiConnection.cpp
	aiPlayer.cpp
	camera.cpp
	cameraSpline.cpp
	containerQuery.cpp
	convexShape.cpp
	debris.cpp
	decal/decalData.cpp
	decal/decalDataFile.cpp
	decal/decalInstance.cpp
	decal/decalManager.cpp
	decal/decalSphere.cpp
	examples/renderMeshExample.cpp
	examples/renderObjectExample.cpp
	examples/renderShapeExample.cpp
	fps/guiClockHud.cpp
	fps/guiCrossHairHud.cpp
	fps/guiHealthBarHud.cpp
	fps/guiShapeNameHud.cpp
	fx/cameraFXMgr.cpp
	fx/explosion.cpp
	fx/fxFoliageReplicator.cpp
	fx/fxShapeReplicator.cpp
	fx/groundCover.cpp
	fx/lightning.cpp
	fx/particle.cpp
	fx/particleEmitter.cpp
	fx/particleEmitterNode.cpp
	fx/precipitation.cpp
	fx/splash.cpp
	fx/windEmitter.cpp
	gameBase/gameBase.cpp
	gameBase/gameConnection.cpp
	gameBase/gameConnectionEvents.cpp
	gameBase/gameProcess.cpp
	gameBase/hifi/hifiGameProcess.cpp
	gameBase/hifi/hifiMoveList.cpp
	gameBase/moveList.cpp
	gameBase/moveManager.cpp
	gameBase/processList.cpp
	gameBase/std/stdGameProcess.cpp
	gameBase/std/stdMoveList.cpp
	gameBase/tickCache.cpp
	gameFunctions.cpp
	gameTSCtrl.cpp
	groundPlane.cpp
	guiMaterialPreview.cpp
	guiNoMouseCtrl.cpp
	guiObjectView.cpp
	item.cpp
	levelInfo.cpp
	lightAnimData.cpp
	lightBase.cpp
	lightDescription.cpp
	lightFlareData.cpp
	missionArea.cpp
	missionMarker.cpp
	occlusionVolume.cpp
	pathCamera.cpp
	physicalZone.cpp
	physics/physicsBody.cpp
	physics/physicsDebris.cpp
	physics/physicsEvents.cpp
	physics/physicsForce.cpp
	physics/physicsObject.cpp
	physics/physicsPlayer.cpp
	physics/physicsPlugin.cpp
	physics/physicsShape.cpp
	physics/physicsUserData.cpp
	physics/physicsWorld.cpp
	player.cpp
	pointLight.cpp
	portal.cpp
	prefab.cpp
	projectile.cpp
	proximityMine.cpp
	rigid.cpp
	rigidShape.cpp
# 	sceneComponent/T3DSceneClient.cpp
# 	sceneComponent/T3DSceneComponent.cpp
# 	sceneComponent/T3DTransform.cpp
	scopeAlwaysShape.cpp
	sfx/sfx3DWorld.cpp
	sfx/sfxEmitter.cpp
	sfx/sfxSpace.cpp
	shapeBase.cpp
	shapeCollision.cpp
	shapeImage.cpp
	spotLight.cpp
	staticShape.cpp
	trigger.cpp
	tsStatic.cpp
	turret/aiTurretShape.cpp
	turret/turretShape.cpp
	vehicles/flyingVehicle.cpp
	vehicles/guiSpeedometer.cpp
	vehicles/hoverVehicle.cpp
	vehicles/vehicle.cpp
	vehicles/vehicleBlocker.cpp
	vehicles/wheeledVehicle.cpp
	zone.cpp
)

set(TORQUE_T3D_HEADERS
	aiClient.h
	aiConnection.h
	aiPlayer.h
	camera.h
	cameraSpline.h
	containerQuery.h
	convexShape.h
	debris.h
	decal/decalData.h
	decal/decalDataFile.h
	decal/decalInstance.h
	decal/decalManager.h
	decal/decalSphere.h
	examples/renderMeshExample.h
	examples/renderObjectExample.h
	examples/renderShapeExample.h
	fx/cameraFXMgr.h
	fx/explosion.h
	fx/fxFoliageReplicator.h
	fx/fxShapeReplicator.h
	fx/groundCover.h
	fx/lightning.h
	fx/particle.h
	fx/particleEmitter.h
	fx/particleEmitterNode.h
	fx/precipitation.h
	fx/splash.h
	fx/windEmitter.h
	gameBase/gameBase.h
	gameBase/gameConnection.h
	gameBase/gameConnectionEvents.h
	gameBase/gameProcess.h
	gameBase/hifi/hifiGameProcess.h
	gameBase/hifi/hifiMoveList.h
	gameBase/moveList.h
	gameBase/moveManager.h
	gameBase/processList.h
	gameBase/std/stdGameProcess.h
	gameBase/std/stdMoveList.h
	gameBase/tickCache.h
	gameFunctions.h
	gameTSCtrl.h
	groundPlane.h
	guiMaterialPreview.h
	guiObjectView.h
	item.h
	levelInfo.h
	lightAnimData.h
	lightBase.h
	lightDescription.h
	lightFlareData.h
	missionArea.h
	missionMarker.h
	objectTypes.h
	occlusionVolume.h
	pathCamera.h
	physicalZone.h
	physics/physicsBody.h
	physics/physicsCollision.h
	physics/physicsCommon.h
	physics/physicsDebris.h
	physics/physicsEvents.h
	physics/physicsForce.h
	physics/physicsObject.h
	physics/physicsPlayer.h
	physics/physicsPlugin.h
	physics/physicsShape.h
	physics/physicsUserData.h
	physics/physicsWorld.h
	player.h
	pointLight.h
	portal.h
	prefab.h
	projectile.h
	proximityMine.h
	resource.h
	rigid.h
	rigidShape.h
# 	sceneComponent/T3DSceneClient.h
# 	sceneComponent/T3DSceneComponent.h
# 	sceneComponent/T3DTransform.h
	sfx/sfx3DWorld.h
	sfx/sfxEmitter.h
	sfx/sfxSpace.h
	shapeBase.h
	spotLight.h
	staticShape.h
	trigger.h
	tsStatic.h
	turret/aiTurretShape.h
	turret/turretShape.h
	vehicles/flyingVehicle.h
	vehicles/hoverVehicle.h
	vehicles/vehicle.h
	vehicles/vehicleBlocker.h
	vehicles/wheeledVehicle.h
	zone.h
)

if(${TORQUE_PHYSICS_BULLET})
	set(TORQUE_PHYSICS_SRCS
		physics/bullet/btBody.cpp
		physics/bullet/btCollision.cpp
		physics/bullet/btDebugDraw.cpp
		physics/bullet/btPlayer.cpp
		physics/bullet/btPlugin.cpp
		physics/bullet/btWorld.cpp
	)
	set(TORQUE_PHYSICS_HEADERS
		physics/bullet/bt.h
		physics/bullet/btBody.h
		physics/bullet/btCasts.h
		physics/bullet/btCollision.h
		physics/bullet/btDebugDraw.h
		physics/bullet/btPlayer.h
		physics/bullet/btPlugin.h
		physics/bullet/btWorld.h
	)

	include_directories(${CMAKE_SOURCE_DIR}/../lib/bullet/src)
elseif(${TORQUE_PHYSICS_PHYSX})
	set(TORQUE_PHYSICS_SRCS
		physics/physx/pxBody.cpp
		physics/physx/pxCloth.cpp
		physics/physx/pxCollision.cpp
		physics/physx/pxContactReporter.cpp
		physics/physx/pxFluid.cpp
		physics/physx/pxMaterial.cpp
		physics/physx/pxMultiActor.cpp
		physics/physx/pxPlayer.cpp
		physics/physx/pxPlugin.cpp
		physics/physx/pxStream.cpp
		physics/physx/pxUtils.cpp
		physics/physx/pxWorld.cpp
	)

	set(TORQUE_PHYSICS_HEADERS
		physics/physx/px.h
		physics/physx/pxBody.h
		physics/physx/pxCasts.h
		physics/physx/pxCloth.h
		physics/physx/pxCollision.h
		physics/physx/pxContactReporter.h
		physics/physx/pxFluid.h
		physics/physx/pxMaterial.h
		physics/physx/pxMultiActor.h
		physics/physx/pxPlayer.h
		physics/physx/pxPlugin.h
		physics/physx/pxStream.h
		physics/physx/pxUtils.h
		physics/physx/pxWorld.h
	)
else()
	message(FATAL_ERROR "No valid physics backend selected")
endif(${TORQUE_PHYSICS_BULLET})

add_library(${TORQUE_BUILD}_T3D STATIC ${TORQUE_T3D_SRCS} ${TORQUE_T3D_HEADERS}
	${TORQUE_PHYSICS_SRCS} ${TORQUE_PHYSICS_HEADERS}
)

